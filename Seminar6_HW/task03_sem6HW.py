
# Задача FOOTBALL необязательная: Напишите программу, которая принимает на стандартный
# вход список игр футбольных команд с результатом матча и выводит на стандартный вывод
# сводную таблицу результатов всех матчей.

# За победу команде начисляется 3 очка, за поражение — 0, за ничью — 1.

# Формат ввода следующий:
# В первой строке указано целое число nn — количество завершенных игр.
# После этого идет nn строк, в которых записаны результаты игры в следующем формате:
# Перваякоманда;Забитопервойкомандой;Втораякоманда;Забитовторойкомандой

# Вывод программы необходимо оформить следующим образом:
# Команда:Всегоигр Побед Ничьих Поражений Всегоочков

# Конкретный пример ввода-вывода приведён ниже.

# Порядок вывода команд произвольный.

# Sample Input:

# 3
# Спартак;9;Зенит;10
# Локомотив;12;Зенит;3
# Спартак;8;Локомотив;15
# Sample Output:

# Спартак:2 0 0 2 0
# Зенит:2 1 0 1 3
# Локомотив:2 2 0 0 6


games = []
with open('text.txt','r',encoding="utf8") as fp:
    nn = int(fp.readline().strip())
    # хочу в этот файл потом записывать, поэтому явно считываю только первые строки
    for i in range(1,nn+1):
        text = fp.readline()
        text = text.split(';')
        text = list(map((lambda el : el.strip() ),text))
        games.append(dict(zip(text[0::2], text[1::2])))
print(games)
table = {}
# в table помещаю сводную таблицу, где ключ - название команды, а значение список, где
# [0]-всего игра, [1]-побед, [2] - ничьих,[3]-поражений, [4] - всего очков
for i in range(len(games)):
    li_score = []
    for k, v in games[i].items(): 
        score = (k,int(v)) #кортеж: ключ,очки
        li_score.append(score) #список кортежей для сравнения

        if k in table: #если нашли в новом словаре,то добавляем игру, если нет, создаем первую
            table[k][0] += 1  
        else: 
            li_games = [0 for i in range(5)]
            table[k] = li_games
            li_games[0]=1   

    print(li_score)  #здесь на каждой итерации получаем список кортежей типа [('Спартак', '8'), ('Локомотив', '15')]
                     #с которым уже можно работать проще, чем со значениями из словаря

    # [0]-всего игра, [1]-побед, [2] - ничьих,[3]-поражений, [4] - всего очков
    if li_score[0][1] == li_score[1][1]:
        # записали для первой команды
        table[li_score[0][0]][2] += 1
        table[li_score[0][0]][4] += 1
        # записали для второй команды
        table[li_score[1][0]][2] += 1
        table[li_score[1][0]][4] += 1
    elif li_score[0][1] > li_score[1][1]:
        # записали для первой команды победу
        table[li_score[0][0]][1] += 1
        table[li_score[0][0]][4] += 3
        # записали для второй команды поражение
        table[li_score[1][0]][3] += 1
    else:
        # записали для второй команды победу
        table[li_score[1][0]][1] += 1
        table[li_score[1][0]][4] += 3
        # записали для первой команды поражение
        table[li_score[0][0]][3] += 1

print()
for key in table:
    print(f'{key.ljust(15)}: {table[key]}')

