from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Updater, CommandHandler, CallbackContext, ConversationHandler
from datetime import datetime
from logger import log
from calc import calc_data, check_data

# –∑–¥–µ—Å—å –±—É–¥—É—Ç –æ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
# –∞ –≤—Å–µ —Ä–∞—Å—á–µ—Ç—ã –±—É–¥—É—Ç —Ç—è–Ω—É—Ç—Å—è –∏–∑ –º–æ–¥—É–ª—è calc

# log(update, context,title)
# –≤—ã–∑—ã–≤–∞—Ç—å –ª–æ–≥ –≤ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–µ/–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ

# –≠—Ç–∞–ø—ã/—Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
FIRST, SECOND, CALC = range(3)
# –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
ONE, TWO = range(2)


def start(update, _):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ `/start`."""
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å—Ç–∏–ª –∫–æ–º–∞–Ω–¥—É `/start`
    user = update.message.from_user
    log(update, _, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∞–ª —Ä–∞–∑–≥–æ–≤–æ—Ä {update.message.text}')
    # logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –Ω–∞—á–∞–ª —Ä–∞–∑–≥–æ–≤–æ—Ä", user.first_name)
    # –°–æ–∑–¥–∞–µ–º `InlineKeyboard`, –≥–¥–µ –∫–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –∏–º–µ–µ—Ç
    # –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –∏ —Å—Ç—Ä–æ–∫—É `callback_data`
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ - —ç—Ç–æ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ –∫–Ω–æ–ø–æ–∫, –≥–¥–µ –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞,
    # –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å, —è–≤–ª—è–µ—Ç—Å—è —Å–ø–∏—Å–∫–æ–º `[[...]]`
    keyboard = [
        [
            InlineKeyboardButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ",
                                 callback_data=str(ONE)),
            InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥ —Ñ–∞–π–ª",
                                 callback_data=str(TWO)),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π `reply_markup`
    update.message.reply_text(
        text=f'''–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {user.first_name}! –Ø –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä-–±–æ—Ç,
        \n–ø–æ—Å—á–∏—Ç–∞—é –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —Å —Ü–µ–ª—ã–º–∏, —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏.'
        \n–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é:''', reply_markup=reply_markup
    )
    # –°–æ–æ–±—â–∞–µ–º `ConversationHandler`, —á—Ç–æ —Å–µ–π—á–∞—Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ `FIRST`
    return FIRST


def start_over(update, context):
    """–¢–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, —á—Ç–æ –∏ –ø—Ä–∏ `/start`, –Ω–æ –Ω–µ –∫–∞–∫ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    # –ü–æ–ª—É—á–∞–µ–º `CallbackQuery` –∏–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è `update`
    query = update.callback_query
    log(update, context, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è –≤ –º–µ–Ω—é')
    # –ù–∞ –∑–∞–ø—Ä–æ—Å—ã –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å,
    # –¥–∞–∂–µ –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
    # –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.
    query.answer()
    keyboard = [
        [
            InlineKeyboardButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ",
                                 callback_data=str(ONE)),
            InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥ —Ñ–∞–π–ª",
                                 callback_data=str(TWO)),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
   # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –æ–±—Ä–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤.
   # –≠—Ç–æ —Å–æ–∑–¥–∞–µ—Ç –æ—â—É—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    # query.edit_message_text(
    #     text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é:", reply_markup=reply_markup
    # )
    # –¥–µ–ª–∞—é –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ, –∞ –æ—Ç–≤–µ—Ç, –∏–Ω–∞—á–µ –∑–∞—Ç–∏—Ä–∞–µ—Ç—Å—è —Ä–∞–Ω–µ–µ –≤—ã–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    # update.message.reply_text(
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é:", reply_markup=reply_markup)
    # query.send_message(
    #     text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é:", reply_markup=reply_markup
    # )

    # –°–æ–æ–±—â–∞–µ–º `ConversationHandler`, —á—Ç–æ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ `FIRST`
    return FIRST


def input_data(update, _):
    """–ó–∞–ø—Ä–æ—Å —Å—Ç—Ä–æ–∫–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è"""
    log(update, _, '–í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç –º–µ–Ω—é: "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ"')
    query = update.callback_query
    query.answer()
    query.edit_message_text(
        text='''
    –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:
    1. –í —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞—Ö 
    - –Ω–µ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è "," (–∑–∞–ø—è—Ç—ã–µ) - –æ—Ç–¥–µ–ª—è–π—Ç–µ –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç—å "." (—Ç–æ—á–∫–æ–π),
    –Ω–∞–ø—Ä–∏–º–µ—Ä: 2.54-1.05*6.45 –∏ —Ç.–ø.
    2. –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ 
    - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—Ä–∞–º–ª–µ–Ω—ã —Å–∫–æ–±–∫–∞–º–∏ (), 
    –Ω–∞–ø—Ä–∏–º–µ—Ä: (2+4j)*(1-3j)-(1+8j) –∏ —Ç.–ø.
    \nüëá –í–≤–µ–¥–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–æ–ª–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π: ''')
    # –≤ —ç—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ - –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç –∏ –Ω–µ –∫–æ–º–∞–Ω–¥–∞, —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å–ª–µ–¥.—Ñ-—Ü–∏—è view_result
    return CALC


def view_result(update, _):
    log(update, _, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –≤—ã—Ä–∞–∂–µ–Ω–∏–µ {update.message.text}')
    # log(update, _, '–í—ã–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞')
    # –≤ input_data –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞, –ø–æ—Å–ª–µ —á–µ–≥–æ –∑–¥–µ—Å—å –≤—ã–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ calc_data –∏
    # –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–ª–∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    user_input = update.message.text
    if isinstance(check_data(user_input), tuple):
        try:
            # –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞ –ø–µ—Ä–µ–¥–∞–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º
            t, value = check_data(user_input)
            result = calc_data(t, value)
        except:
            result = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ'
    else:
        # –í –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        result = check_data(user_input)

    log(update, _, f'–í—ã–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}')

    keyboard = [
        [
            InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ú–µ–Ω—é", callback_data=str(ONE)),
            InlineKeyboardButton("–ù–µ—Ç, —Å –º–µ–Ω—è —Ö–≤–∞—Ç–∏—Ç ...",
                                 callback_data=str(TWO)),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π `reply_markup`
    update.message.reply_text(
        text=f"{result}\n–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞?", reply_markup=reply_markup
    )
    # –°–æ–æ–±—â–∞–µ–º `ConversationHandler`, —á—Ç–æ —Å–µ–π—á–∞—Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ `SECOND`
    return SECOND


def view_log(update, context):
    # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
    # –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–ª–∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    log(update, context, '–í—ã–¥–∞–µ–º –ª–æ–≥-—Ñ–∞–π–ª')

    """–ü–æ–∫–∞–∑ –≤—ã–±–æ—Ä–∞ –∫–Ω–æ–ø–æ–∫"""
    query = update.callback_query
    query.answer()
    keyboard = [
        [
            InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ú–µ–Ω—é", callback_data=str(ONE)),
            InlineKeyboardButton("–ù–µ—Ç, —Å –º–µ–Ω—è —Ö–≤–∞—Ç–∏—Ç ...",
                                 callback_data=str(TWO)),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    # ?–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –ø—Ä–æ—à–ª–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ?
    # –∏–ª–∏ –∑–¥–µ—Å—å context?
    query.bot.send_document(chat_id=update.effective_chat.id, document=open('calc_bot/calc_bot.txt', 'rb'), caption='–§–∞–π–ª –ª–æ–≥–∞',
                            )
    # update.message.reply_text(
    #     text="–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞?", reply_markup=reply_markup
    # )
    context.bot.send_message(chat_id=update.effective_chat.id,
                        text="–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞?", reply_markup=reply_markup)

    # query.edit_message_text(
    #     text="–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞?", reply_markup=reply_markup
    # )
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ `SECOND`

    return SECOND


def end(update, context):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `ConversationHandler.END`, –∫–æ—Ç–æ—Ä—ã–π –≥–æ–≤–æ—Ä–∏—Ç
    `ConversationHandler` —á—Ç–æ —Ä–∞–∑–≥–æ–≤–æ—Ä –æ–∫–æ–Ω—á–µ–Ω"""
    log(update, context, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–∑–≥–æ–≤–æ—Ä')
    query = update.callback_query
    query.answer()
    # update.message.reply_text(text="–£–≤–∏–¥–∏–º—Å—è –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑!")
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–£–≤–∏–¥–∏–º—Å—è –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑!")

    return ConversationHandler.END


def cancel(update, _):
    user = update.message.from_user
    log(update, _, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª —Ä–∞–∑–≥–æ–≤–æ—Ä')
    update.message.reply_text('–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á')
    # –∏–ª–∏ edit_message_text?
    return ConversationHandler.END
