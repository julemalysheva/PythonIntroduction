# задача 1. Создайте программу для игры с конфетами человек против человека.

# Условие задачи: На столе лежит 2021 конфета. Играют два игрока делая ход друг после друга. 
# Первый ход определяется жеребьёвкой. За один ход можно забрать не более чем 28 конфет. 
# Все конфеты оппонента достаются сделавшему последний ход. Сколько конфет нужно взять первому игроку,
#  чтобы забрать все конфеты у своего конкурента?
# a) Добавьте игру против бота
# b) Подумайте как наделить бота ""интеллектом""


from random import *
# если первый ход бота- реализовать ему алгоритм выигрыша
# если не первый ход бота, но чел.взял не 20, тоже реализовать подстройку

var = input('Выберите вариант игры. Введите:\n 1 - смотреть рандомный ход игры\n 2 - с "умным" ботом:\n ')
all = 165 #поменять на 2021, для проверки уменьшила значение
first = all % 29 #(в варианте, когда диапазон возможных ходов 1-28)
print (f"Первый игрок должен взять за первый ход {first} конфет для выигрыша ") 
num = 0
n_hoda = 0
hod = choice([True, False]) #определили рандомно 1го игрока
# буду считать по ходу программы, что True - это бот, False - человек 
dic = {}
dic[hod] = [1] #и добавили это значение в словарь
dic[not hod] = [2]
if hod == True: 
    dic[hod].append('bot')
    dic[not hod].append('human')
else: 
    dic[hod].append('human')
    dic[not hod].append('bot')

print(dic)

if var == '1':
    # a) Добавьте игру против бота
    # игра против бота "без интеллекта"- человек может вводить значения, 
    # но для ускорения отработки программы тоже сделала рандом
    while all>0:
        print(f'Сейчас ходит {dic[hod][0]} игрок, {dic[hod][1]}:')
        if hod: 
            num = randint(1,28)
            print('Мной взято', {num}, "конфет")
        else: 
            # num = int(input('количество конфет: ')) 
            num = randint(1,28)
            print('Вы взяли', {num}, "конфет")
        all -= num
        # меняем игрока
        hod = not hod
    #т.к. после крайнего хода hod содержит уже смену игрока, то выиграл получается not hod,предыдущий игрок 
    print (f'Последний выигрышный ход {dic[not hod][1]}')

else: 
    # b) Подумайте как наделить бота ""интеллектом""
    # если первый ходит бот - его шаги просчитываются, а если человек - ему даем подсказки
    # можно также доработать алгоритм, если 1й не берет 20, 2й может добрать нужное до выигрыша
    # но пока реализовано только 1й ход = %29 и добираем ход до 29 у первого игрока

        while all>0:
            print(f'Сейчас ходит {dic[hod][0]} игрок, {dic[hod][1]}:')
            if hod: #игрок бот,т.к.мы приняли его за True
                if n_hoda == 0:
                    num = first
                else: 
                    if dic[hod][0] == 1: #если бот - 1й игрок, применяем алгоритм
                        num = 29-num    
                    else: num = randint(1,28) #иначе бот берет рандомно
                print('Мной взято', {num}, "конфет")
            else: #игрок человек
                if n_hoda == 0:
                    num = int(input(f'Это ваш первый ход, чтобы выиграть, возьмите {first} конфет.\n'
                    'Введите количество конфет:')) 
                else:
                    if dic[hod][0] == 1: #если человек - 1й игрок, даем ему рекомендации
                        num = int(input(f'Чтобы выиграть, возьмите {29-num} конфет.\n'
                        'Введите количество конфет:'))    
                    else: num = randint(1,28) 
                    #выше для ускорения процесса сделала рандом, если это не первый игрок, но можно переделать
                print('Вы взяли', {num}, "конфет")
            all -= num
            n_hoda+=1
            # меняем игрока
            hod = not hod

    #т.к. после крайнего хода hod содержит уже смену игрока, то выиграл получается not hod,предыдущий игрок 
        print (f'Последний {n_hoda-1} выигрышный ход {dic[not hod][1]}')

